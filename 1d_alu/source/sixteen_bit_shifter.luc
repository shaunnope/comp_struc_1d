
/**
Logical, arithmetic shifts and rotate
10 0000: SHL
10 0001: SHR
10 0011: SRA
10 0100: ROTL
10 0101: ROTR
*/
module sixteen_bit_shifter (
    input alufn[3],
    input x[16],
    input shift[4],
    output out[16]
  ) {
  always {
  case(alufn) {
      b000: out = x << shift;
      b001: out = x >> shift;
      b011: out = $signed(x) >>> shift;
      b100: out = (x << shift) | (x >> (-shift & 15));
      b101: out = (x >> shift) | (x << (-shift & 15));
      default: out = x;
    }
  }
}
/** 
  Rotate through carry: How to implement if carry-out not part of inputs
   
*/