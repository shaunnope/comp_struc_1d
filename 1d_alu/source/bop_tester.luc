/*
  Tester module
*/
module bop_tester (
    input clk,  // clock
    input rst,  // reset
    input u_input[3],
    input start,
    
    input level[2],
    output action[4],
    output o_level[2],
    output o_input[4],
    output o_start,
    output st,
    
    output out
  ) {
  .clk(clk) {
    .rst(rst) {
      bop_slwclk_rng slwclk(#FREQ(28));
      bop_regfile regfile;
      
      bop_fsm ctrlunit(.slwclk(slwclk.st));
    }
  }
  
  bop_alu_wdsel alu;
  

  always {
    slwclk.level = level;
    
    regfile.reg_abc = 0;
    regfile.w_data = 0;
    regfile.werf = 0;
    
    ctrlunit.level = level;
    ctrlunit.start = start;
    ctrlunit.rb_data = regfile.rb_data;
    ctrlunit.inputs = u_input;
    ctrlunit.zvnpc = alu.aluflags;
    
    alu.alufn = ctrlunit.alufn;
    alu.asel = ctrlunit.asel;
    alu.bsel = ctrlunit.bsel;
    alu.lit = ctrlunit.lit;
    alu.action = slwclk.action;
    alu.timer = regfile.timer_data[4:0];
    alu.wdsel = ctrlunit.wdsel;
    alu.u_input = u_input;
    alu.ra_data = regfile.ra_data;
    alu.rb_data = regfile.rb_data;
    
    o_level = level;
    o_input = u_input;
    o_start = start;
    st = slwclk.st;
    action = slwclk.action;
    
    out = 0;
  }
}
