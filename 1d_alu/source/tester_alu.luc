module tester_alu (
    input clk,              // 100MHz clock
    input rst,              // reset
    output led[8],          // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,          // USB->Serial output
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8] 
  ) {
  
  sig zvnpc[5];  // flags
  sig out[16];  
  
  .clk(clk) {
    edge_detector manualControl[5](#RISE(1), #FALL(0));
    
    .rst(rst){
      alu_tester tester;
      var_seven_seg display;
    }
  }
  
  always {
    
    led = 8h00;             // turn LEDs off

    usb_tx = usb_rx;        // echo the serial data
    
    io_led = 3x{{8h00}};    // turn LEDs off
    io_seg = 8hff;          // turn segments off
    io_sel = 4hf;           // select no digits
    
    manualControl.in = io_button; // rising edge button inputs
    
    // ----------- Test circuit out --------
    
    tester.io_dip = io_dip;
    tester.mCon = manualControl.out;
    tester.mIn = io_button;
    out = tester.out;
    zvnpc = tester.flags;

    
    io_led[2] = out[15:8];
    io_led[1] = out[7:0];
    io_led[0][4:0] = zvnpc;
    
    led[7] = tester.caseidx[15];       // blinker
    
    
    display.value[3] = tester.caseidx[15:12];
    display.value[2] = tester.caseidx[11:8];
    display.value[1] = tester.caseidx[7:4];
    display.value[0] = tester.caseidx[3:0];
    io_seg = display.seg;
    io_sel = display.sel;
    // ------------- END TEST --------------
    
}
