module bop_regfile (
    input clk,  // clock
    input rst,  // reset
    input w_data[16],
    input werf,
    input reg_abc[9], // 8:6 - a, 5:3 - b, 2:0 - c
    
    output ra_data[16],
    output rb_data[16],
    output score_data[16],
    output input_data[16],
    output timer_data[16], 
    output level_data[16],
    output out
    
    // REGFILE Addresses --> Persistent read ports  ------
    // 0x00: SCORE 
    // 0x01: INPUT --> input_data[16]
    // 0x02: TIMER --> timer_data[16]
    // 0x03: LEVEL --> level_data[16]
    // 0x04: LSCORE 
    // 0x05: OSCORE --> score_data[16] (LED use)
    // 0x06: CORRECT 
    // 0x07: TEMP
    
  ) {
  .clk(clk) {
    .rst(rst) {
      dff regfile[16][16];
    }
  }
  
  sig ra[3];
  sig rb[3];
  sig rc[3];
  
  always {
    ra = reg_abc[8:6];
    rb = reg_abc[5:3];
    rc = reg_abc[2:0];
    
    out = 0;
    ra_data = regfile.q[ra];
    rb_data = regfile.q[rb];
    
    if (werf & 1) {
      regfile.d[rc] = w_data;
    }
    
    input_data = regfile.q[1];
    timer_data = regfile.q[2];
    level_data = regfile.q[3];
    score_data = regfile.q[5];
    
  }
}
