/** 
central module to compute znvp flags 
*/
module op_flags (
    input alufn[6],
    input aluout[17], // out + c
    input x[16],
    input y[16],
    output z,     // zero
    output v,     // overflow
    output n,     // negative
    output p      // parity 0 - odd bits, 1 - even bits
  ) {
  sig a;
  sig b;
  always {
    a = x[15];
    case (alufn[5:1]) {
      b00000: // arith
          b = y[15] ^ alufn[0];
      default:
          b = y[15]; 
    }
    

    n = aluout[15];
    z = ~|aluout[15:0];
    p = ~^aluout[15:0];
    
    case(alufn[5:1]){
      b00000: v = (a & b & ~aluout[15]) | (~a & ~b & aluout[15]); // ADD SUB
      b00001: v = aluout[16]; // MUL DIV(0)
      default: v = b0; // SHL SHR SRA ROT BOOL
  }
}
