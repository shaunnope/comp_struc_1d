module alu_tester (
    input clk,  // clock
    input rst,  // reset
    output out[16],
    output flags[5],
    output caseidx[9] // alumode + case idx
  ) {
  
  .clk(clk) {
    .rst(rst){
      alu_fsm alufsm;
    }
  }
  tester_ROM alurom;
  alu alu;
  
  sig aluout[16];
  sig aluflags[5];

  always {
    //alurom.alu_mode = alufsm.alu_mode;
    alurom.alu_mode = 1;
    alurom.index = alufsm.index;
    caseidx = c{alufsm.alu_mode, alufsm.index}; // signal for 7seg
    
    alu.x = alurom.x;
    alu.y = alurom.y;
    alu.alufn = alufsm.alufn_signal;
    
    aluout = alu.out;
    aluflags = alu.zvnpc;
    
    // if err sim state
    // aluout = ~alu.out
    
    // verify output matches expected
    // alufsm.irq = (alu.out != alurom.aluout) || (alu.zvnpc != alurom.flags);
    alufsm.irq = 0;
    
    
    out = aluout;
    flags = aluflags;

  }
}
