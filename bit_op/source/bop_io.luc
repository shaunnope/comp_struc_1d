/*
  Interface for game and IO components
   
   Note: condition external inputs before passing into this module
*/
module bop_io (
    input clk,              // 100MHz clock
    input rst,              // reset
    input io_button [5],    // 5 buttons on IO Shield
    
    output buzzout,
    output strip_led
  ) {
  
  .clk(clk) {
    edge_detector signals[2](#RISE(1), #FALL(0));
      .rst(rst){
        bop_game game;
        bop_led led_strip;
      }
    }
  
  encoder action(#WIDTH(4));
  encoder input_encoder(#WIDTH(4));
  
  always {
    
    strip_led = 0;
    
    // ----------- Test circuit out --------
    
    signals.in = c{io_button[3], io_button[0]};
    
    game.u_input = io_button[2:0];
    game.start = signals.out[0];
    game.toggle = signals.out[1];
    
    // LED Strip Logic
    action.in = game.action;
    input_encoder.in = io_button[2:0];
    
    // mid-round: LED strip depends on ST CLK rise/fall
    if (|game.level[5:4] & ~game.level[3]) {
      if (game.st) {
        led_strip.pixels = 16hffff;
        led_strip.color = action.out + 2;
      } else {
        led_strip.pixels = game.score;
        led_strip.color = game.correct;
      }
    } else {     
      // end-round: LED strip depends on score alone
      if (game.level[3]) {
        led_strip.pixels = game.score;
        led_strip.color = 1;
        
      // start-round: start or freeplay
      } else {
      
        // If in freeplay mode: bzsel will be on
        if (game.bzsel & 1) {
        
          // If only a single button is pressed, turn on the corr. LED colour
          if ( io_button[2:0] == b001 
            || io_button[2:0] == b010 
            || io_button[2:0] == b100
          )  
          {
            led_strip.pixels = 16hffff;
            led_strip.color = input_encoder.out + 2;
          }
          
        // In start mode: dont do anything
        } else {
        
          led_strip.pixels = 0;
          led_strip.color = 0;
        }
      }
    }
    
    // External Output assignment
    strip_led = led_strip.out;
    buzzout = game.buzzout;
    
}